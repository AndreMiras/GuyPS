#:import find kivy.resources
#:import MapSource mapview.MapSource
#:import awesomarkup awesomarkup.awesomarkup
#:include popupmessage.kv
#:include confirmpopup.kv

# <Toolbar@BoxLayout>:
<Toolbar>:
    size_hint_y: None
    height: '48dp'
    padding: '4dp'
    spacing: '4dp'

    canvas:
        Color:
            rgba: .2, .2, .2, self.alpha_color
        Rectangle:
            pos: self.pos
            size: self.size

<ShadedLabel@Label>:
    size: self.texture_size
    canvas.before:
        Color:
            rgba: .2, .2, .2, .6
        Rectangle:
            pos: self.pos
            size: self.size

<OfflineMapsScreen>:
    offline_maps_spinner: offline_maps_spinner
    # updates offline maps list
    on_enter:
        offline_maps_spinner.values = root.available_offline_maps()
    BoxLayout:
        id: layout_boxlayout
        orientation: 'vertical'
        ActionBar:
            pos_hint: {'top': 1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Offline maps'
                    with_previous: True
                    on_press:
                        root.manager.current = 'map'
                        root.manager.transition.direction = 'left'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: '48dp'
            padding: '4dp'
            spacing: '4dp'
            Label:
                text: 'Download:'
                size_hint: None, None
                size: self.texture_size
            TextInput:
                multiline: False
                on_text_validate:
                    app.controller.prepare_download_for_offline1(self.text)
                    root.manager.current = 'map'
                    root.manager.transition.direction = 'left'
        Spinner:
            id: offline_maps_spinner
            text: "%s Available offline maps" % awesomarkup('fa-map')
            markup: True
            on_text:
                app.controller.load_mbtiles(self.text)
                root.manager.current = 'map'
                root.manager.transition.direction = 'left'
        Button:
            text: u'%s Download world map' % awesomarkup('fa-globe')
            markup: True
            on_press:
                app.controller.download_world_map()
                root.manager.current = 'map'
                root.manager.transition.direction = 'left'
        Button:
            text: u'%s Back online' % awesomarkup('fa-signal')
            markup: True
            on_press:
                app.controller.load_default_map_source()
                root.manager.current = 'map'
                root.manager.transition.direction = 'left'
        Button:
            text: u'%s Back to menu' % awesomarkup('fa-bars')
            markup: True
            on_press:
                root.manager.current = 'menu'
                root.manager.transition.direction = 'left'

<MenuScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        ActionBar:
            pos_hint: {'top': 1}
            ActionView:
                use_separator: True
                ActionPrevious:
                    title: 'Menu'
                    with_previous: True
                    on_press:
                        root.manager.current = 'map'
                        root.manager.transition.direction = 'left'
        ToggleButton:
            text: u'%s GPS' % awesomarkup('fa-map-marker')
            markup: True
            on_state:
                root.manager.current = 'map'
                root.manager.transition.direction = 'left'
                start = self.state == 'down'
                app.controller.toggle_gps_localize(start)
        Button:
            text: u'%s Offline maps' % awesomarkup('fa-download')
            markup: True
            on_press:
                root.manager.current = 'offline_maps'
                root.manager.transition.direction = 'right'

<MapViewScreen>:
    search_input_property: search_input
    status_bar_property: status_bar

    CustomMapView:
        id: mapview
        # lat: 50.6394
        # lon: 3.057
        lat: 43.61
        lon: 3.88
        zoom: 8
        #size_hint: .5, .5
        #pos_hint: {"x": .25, "y": .25}

        MapMarker:

    Toolbar:
        top: root.top
        # Spinner:
        #     text: "mapnik"
        #     values: MapSource.providers.keys()
        #     on_text: mapview.map_source = self.text
        Button:
            size_hint_x: None
            width: '48dp'
            text: u'%s' % awesomarkup('fa-bars')
            markup: True
            on_press:
                root.manager.current = 'menu'
                root.manager.transition.direction = 'right'
        TextInput:
            id: search_input
            multiline: False
            on_text_validate: mapview.search(self.text)

    Toolbar:
        id: status_bar
        Label:
            text: root.status_message

# RelativeLayout:
<Controller>:
    mapview_screen_property: mapview_screen

    ScreenManager:

        MapViewScreen:
            id: mapview_screen
            name: 'map'

        MenuScreen:
            id: menu_screen
            name: 'menu'

        OfflineMapsScreen:
            id: offline_maps_screen
            name: 'offline_maps'
